// Model
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace GRUD_book.Book
{
    public class Book
    {
        public  Guid id { get; set; }
        public string Title { get; set; }
        public string Description { get; set; }
        public DateTime DateTime { get; set; }
        public int PageNumber { get; set; }
        public int Price { get; set; }
        public List<string> AuthorsName { get; set; }= new List<string>();
        public List<string> ReaderName { get; set; } = new List<string>();
        public List<string> AuthorNumber { get; set; }= new List<string>();

    }
}



/// Service

using GRUD_book.Book;


public class BookService
{
    private List<Book> books;

    public BookService()
    {
        books = new List<Book>();
    }

    public Book GetExpensiveBook()
    {
        var MaxPrice = 0;
        Book Result = null;
        foreach (var i in books)
        {
            if (i.Price > MaxPrice)
            {
                MaxPrice = i.Price;
                return i;
            }
        }
        return null;
    }

    public Book GetMostPagedBook()
    {
        int MostPaged = 0;
        foreach (var i in books)
        {
            if (i.PageNumber > MostPaged)
            {
                MostPaged = i.PageNumber;
                return i;
            }
        }
        return null;
    }

    public Book GetMostReadBook()
    {
        var MostReaded = 0;
        foreach (var book in books)
        {
            if (book.ReaderName.Count > MostReaded)
            {
                MostReaded = book.ReaderName.Count;
                return book;
            }
        }
        return null;
    }

    public List<Book> GetBooksByAuthorName(string AuthorName)
    {
        var Author = new List<Book>();
        foreach (var book in books)
        {
            if (book.ReaderName.Contains(AuthorName))
            {
                Author.Add(book);
            }
        }
        return Author;

    }

    public List<Book> GetBooksByReaderName(string readerName)
    {
        var Reader = new List<Book>();
        foreach (var book in books)
        {
            if (book.ReaderName.Contains(readerName))
            {
                Reader.Add(book);
            }
        }
        return Reader;

    }

    public bool AddReaderToBook(Guid bookId, string readerName)
    {
        foreach (var book in books)
        {
            if (book.id == bookId)
            {
                book.ReaderName.Add(readerName);
                return true;
            }
        }
        return false;

    }

    public Book GetById(Guid id)
    {
        foreach (var book in books)
        {
            if (book.id == id)
            {
                return book;
            }
        }
        return null;
    }

    public bool AddAuthorToBook(Guid bookId, string authorName)
    {
        foreach (var book in books)
        {
            if (book.id == bookId)
            {
                book.AuthorsName.Add(authorName);
                return true;
            }
        }
        return false;
    }

    public bool AddBook(Book Newbook)
    {
        Newbook.id = Guid.NewGuid();
        books.Add(Newbook);
        return true;
    }

    public bool DeleteBook(Guid bookId)
    {
        var id = GetById(bookId);
        if(id == null)
        {
            return false;
        }
        books.Remove(id);
        return true;
    }

    public bool UpdateBook(Guid id, Book Updatedbook)
    {
        var exist = GetById(id);
        if(exist == null)
        {
            return false;
        }
        var index = books.IndexOf(exist);
        books[index] = Updatedbook;
        return true;
    }

    public List<Book> GetAll()
    {
        return books;
    }

}